import 'package:flutter/material.dart';
import 'package:universal_html/html.dart' as html;



void main() => runApp(LoginApp());

class LoginApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Login App',
      theme: ThemeData(
        primaryColor: Colors.blue,
        colorScheme: ColorScheme.fromSwatch().copyWith(
          secondary: Colors.blueAccent,
        ),
        scaffoldBackgroundColor: Colors.white,
      ),
      initialRoute: '/',
      routes: {
        '/': (context) => LoginPage(),
        '/dashboard': (context) => DashboardPage(),
      },
    );
  }
}

class LoginPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          'Login',
          style: TextStyle(
            color: Colors.white,
            fontSize: 24,
          ),
        ),
        elevation: 0,
        centerTitle: true,
      ),
      body: Container(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(height: 32.0),
            Text(
              'PT. PELAYARAN ONI PALEMBANG',
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
                color: Theme.of(context).colorScheme.secondary,
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 32.0),
            Image.asset(
              'assets/Logo.jpg', // Ubah dengan path gambar logo Anda
              width: 120, // Ubah ukuran sesuai kebutuhan
              height: 120,
            ),
            SizedBox(height: 32.0),
            TextField(
              decoration: InputDecoration(
                labelText: 'Username',
                filled: true,
                fillColor: Colors.white,
              ),
            ),
            SizedBox(height: 16.0),
            TextField(
              decoration: InputDecoration(
                labelText: 'Password',
                filled: true,
                fillColor: Colors.white,
              ),
              obscureText: true,
            ),
            SizedBox(height: 24.0),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                primary: Theme.of(context).colorScheme.secondary,
                elevation: 0,
                padding: EdgeInsets.symmetric(vertical: 16),
              ),
              child: Text(
                'Login',
                style: TextStyle(
                  fontSize: 16,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
              onPressed: () {
                Navigator.pushNamed(context, '/dashboard');
              },
            ),
          ],
        ),
      ),
    );
  }
}

class DashboardPage extends StatefulWidget {
  @override
  _DashboardPageState createState() => _DashboardPageState();
}

class _DashboardPageState extends State<DashboardPage> {
  int selectedIndex = 0;

  void selectMenu(int index) {
    setState(() {
      selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          'Dashboard',
          style: TextStyle(
            color: Colors.white,
            fontSize: 24,
          ),
        ),
        elevation: 0,
        centerTitle: true,
      ),
      body: Row(
        children: [
          Expanded(
            flex: 2,
            child: Container(
              color: Colors.grey[200],
              child: ListView(
                children: [
                  DashboardMenuItem(
                    icon: Icons.home,
                    title: 'Home',
                    index: 0,
                    selectedIndex: selectedIndex,
                    onTap: selectMenu,
                  ),
                  DashboardMenuItem(
                    icon: Icons.add,
                    title: 'Input Surat',
                    index: 1,
                    selectedIndex: selectedIndex,
                    onTap: selectMenu,
                  ),
                  DashboardMenuItem(
                    icon: Icons.list,
                    title: 'Data Surat',
                    index: 2,
                    selectedIndex: selectedIndex,
                    onTap: selectMenu,
                  ),
                  DashboardMenuItem(
                    icon: Icons.dashboard,
                    title: 'Menu 4',
                    index: 3,
                    selectedIndex: selectedIndex,
                    onTap: selectMenu,
                  ),
                ],
              ),
            ),
          ),
          Expanded(
            flex: 8,
            child: Container(
              padding: EdgeInsets.all(16.0),
              child: getSelectedPage(selectedIndex),
            ),
          ),
        ],
      ),
    );
  }

  Widget getSelectedPage(int index) {
    switch (index) {
      case 0:
        return HomePage();
      case 1:
        return InputSuratContent(onSubmit: addSuratData);
      case 2:
        return DataSuratPage(suratDataList: suratDataList);
      case 3:
        return Container(child: Text('Menu 4 Content'));
      default:
        return Container();
    }
  }

  List<SuratData> suratDataList = [];

  void addSuratData(SuratData suratData) {
    setState(() {
      suratDataList.add(suratData);
    });
  }
}

class DashboardMenuItem extends StatelessWidget {
  final IconData icon;
  final String title;
  final int index;
  final int selectedIndex;
  final ValueChanged<int> onTap;

  DashboardMenuItem({
    required this.icon,
    required this.title,
    required this.index,
    required this.selectedIndex,
    required this.onTap,
  });

  @override
  Widget build(BuildContext context) {
    return ListTile(
      leading: Icon(icon),
      title: Text(title),
      selected: index == selectedIndex,
      onTap: () => onTap(index),
    );
  }
}

class HomePage extends StatelessWidget {
  final String accountName = 'John Doe'; // Ubah dengan nama pemilik akun Anda

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Text(
          'Welcome, $accountName!',
          style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
        ),
        SizedBox(height: 16.0),
        Text(
          'This is the home page content',
          style: TextStyle(fontSize: 18),
        ),
      ],
    );
  }
}

class InputSuratContent extends StatefulWidget {
  final ValueChanged<SuratData> onSubmit;

  InputSuratContent({required this.onSubmit});

  @override
  _InputSuratContentState createState() => _InputSuratContentState();
}

class _InputSuratContentState extends State<InputSuratContent> {
  final TextEditingController _namaSuratController = TextEditingController();
  final TextEditingController _noSuratController = TextEditingController();
  final TextEditingController _masaBerlakuController = TextEditingController();
  String? _filePath;

  DateTime? _selectedDate;

  @override
  void dispose() {
    _namaSuratController.dispose();
    _noSuratController.dispose();
    _masaBerlakuController.dispose();
    super.dispose();
  }

  void _selectDate(BuildContext context) async {
    final DateTime? pickedDate = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(2000),
      lastDate: DateTime(2100),
    );

    if (pickedDate != null && pickedDate != _selectedDate) {
      setState(() {
        _selectedDate = pickedDate;
        _masaBerlakuController.text =
            '${_selectedDate!.day}/${_selectedDate!.month}/${_selectedDate!.year}';
      });
    }
  }

  void _submitForm() {
    final String namaSurat = _namaSuratController.text;
    final String noSurat = _noSuratController.text;
    final String masaBerlaku = _masaBerlakuController.text;

    // Create SuratData object
    SuratData suratData = SuratData(
      nama: namaSurat,
      noSurat: noSurat,
      tanggalSurat: masaBerlaku,
      filePath: _filePath,
    );

    // Call the onSubmit callback with the SuratData object
    widget.onSubmit(suratData);

    // Reset form
    _namaSuratController.clear();
    _noSuratController.clear();
    _masaBerlakuController.clear();
    _selectedDate = null;
    _filePath = null;

    // Tampilkan notifikasi atau peringatan bahwa data telah berhasil diinput
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('Surat berhasil diinput'),
      ),
    );
  }

  void _selectFile() async {
  final html.InputElement? input = html.document.createElement('input') as html.InputElement?;
  input!.type = 'file';
  input.accept = 'application/pdf,image/*,.doc,.docx'; // Ubah dengan ekstensi file yang diizinkan
  input.click();

  input.onChange.listen((e) {
    final files = input.files;
    if (files!.isNotEmpty) {
      final file = files[0];
      final reader = html.FileReader();
      reader.readAsDataUrl(file);

      reader.onLoadEnd.listen((e) {
        final fileData = reader.result as String;
        final base64Data = fileData.split(',').last;

        setState(() {
          _filePath = fileData; // Menyimpan data file (base64) ke _filePath
        });
      });
    }
  });
}

  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          Text(
            'Input Surat',
            style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
          ),
          SizedBox(height: 16.0),
          TextField(
            controller: _namaSuratController,
            decoration: InputDecoration(
              labelText: 'Nama Surat',
              filled: true,
            ),
          ),
          SizedBox(height: 16.0),
          TextField(
            controller: _noSuratController,
            decoration: InputDecoration(
              labelText: 'No. Surat',
              filled: true,
            ),
          ),
          SizedBox(height: 16.0),
          GestureDetector(
            onTap: () => _selectDate(context),
            child: AbsorbPointer(
              child: TextField(
                controller: _masaBerlakuController,
                decoration: InputDecoration(
                  labelText: 'Masa Berlaku Surat',
                  filled: true,
                ),
              ),
            ),
          ),
          SizedBox(height: 16.0),
          ElevatedButton(
            onPressed: _selectFile,
            child: Text('Select File'),
          ),
          SizedBox(height: 8.0),
          if (_filePath != null) Text('Selected File: $_filePath'),
          SizedBox(height: 24.0),
          ElevatedButton(
            style: ElevatedButton.styleFrom(
              primary: Theme.of(context).colorScheme.secondary,
              elevation: 0,
              padding: EdgeInsets.symmetric(vertical: 16),
            ),
            onPressed: _submitForm,
            child: Text(
              'Submit',
              style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.bold,
                color: Colors.white,
              ),
            ),
          ),
        ],
      ),
    );
  }
}

class DataSuratPage extends StatelessWidget {
  final List<SuratData> suratDataList;

  DataSuratPage({required this.suratDataList});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: [
        Text(
          'Data Surat',
          style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
        ),
        SizedBox(height: 16.0),
        Expanded(
          child: ListView.builder(
            itemCount: suratDataList.length,
            itemBuilder: (context, index) {
              final SuratData suratData = suratDataList[index];
              return ListTile(
                title: Text(suratData.nama),
                subtitle: Text('No. Surat: ${suratData.noSurat}'),
                trailing: Text(suratData.tanggalSurat),
                onTap: () {
                  // Implement action when tapping on a data
                },
              );
            },
          ),
        ),
      ],
    );
  }
}

class SuratData {
  final String nama;
  final String noSurat;
  final String tanggalSurat;
  final String? filePath;

  SuratData({
    required this.nama,
    required this.noSurat,
    required this.tanggalSurat,
    required this.filePath,
  });
}